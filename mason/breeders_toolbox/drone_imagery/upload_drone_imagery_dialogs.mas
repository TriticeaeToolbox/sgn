<%args>
</%args>

<& /util/import_javascript.mas, classes => [ 'jquery.iframe-post-form', 'CXGN.BreederSearch', 'CXGN.Trial', 'moment_min', 'daterangepicker' ] &>

<div class="modal fade" id="upload_drone_imagery_dialog" name="upload_drone_imagery_dialog" tabindex="-1" role="dialog" aria-labelledby="uploadDroneImageryDialog">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="uploadDroneImageryDialog">Upload Aerial Imagery</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="upload_drone_imagery_form" name="upload_drone_imagery_form">

                <&| /util/workflow.mas, id=> "drone_imagery_upload_workflow" &>
                    <&| /util/workflow.mas:step, title=> "Intro" &>
                        <& /page/page_title.mas, title=>"This workflow will guide you through uploading aerial images to the database" &>
                        <p>Your field trial must already be in the database before you can upload images for it. Please go to <a href="/breeders/trials">Manage->Field Trials</a> if it is not.</p>
                        <p>A field trial represents plots in the field where each plot has a globally unique <i>plot_name</i>, a sequential <i>plot_number</i> that is unique in the trial (e.g. 101, 102, 103 for three separate plots), and an <i>accession_name</i> representing the genotype being tested in that plot. Each plot can belong to different blocks (<i>block_number</i>) and reps (<i>rep_number</i>) depending on the experimental design you are using (e.g. complete block vs augmented design). Each plot can have a <i>row_number</i> and <i>col_number</i> indicating the relative position of the plot in the field. A field trial can represent a yield trial, a phenotyping trial, a crossing block, a greenhouse, a nursery, etc.</p>
                        <p>If you have raw aerial images (.tiff) that have not been stitched into an orthophotomosaic image of the whole field, your raw images should be uploaded using a zipfile (.zip). You can have several drone runs for a single field trial. The maximum zipfile size is 2GB; however, you can upload many separate zipfiles.</p>
                        <p>If you already have an orthophotomosaic image of your entire field, you can upload that image under a field trial and a drone run. The maximum size for each image is 200MB. Upload orthomosaics as .TIFF, .PNG, or .JPG images.</p>
                        <p><b>Example Data:</b> <a href="/static_content/imagebreed/AlfalfaExample35MeterMicasenseAerialDroneFlightRawCaptures.zip" download>Micasense 5 Band Raw Images (Unstitched image-captures) (Upload zipfile for ImageBreed.)</a></p>
                        <p><b>Example Data:</b> <a href="/static_content/imagebreed/ExampleAerialDroneFlightMicasensePanel.zip" download>Micasense 5 Band Panel Images (Micasense calibration panel images.) (Upload zipfile for ImageBreed to calibrate Micasense raw-captures.)</a></p>
                        <p><b>Example Data:</b> <a href="/static_content/imagebreed/AlfalfaExample35MeterMicasenseAerialDroneFlightOrthomosaics.zip" download>Micasense 5 Band Previously Stitched Orthophotomosaic Images (PNG Files in provided zipfile. Can upload each band separately into ImageBreed.)</a></p>
                        <br/><br/>
                        <center>
                        <button class="btn btn-primary" onclick="Workflow.complete(this); return false;">Go to Next Step</button>
                        </center>
                    </&>
                    <&| /util/workflow.mas:step, title=> "Field Trial" &>
                        <& /page/page_title.mas, title=>"Select your field trial" &>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Field Trial: </label>
                            <div class="col-sm-9" >
                                <div id="upload_drone_image_trial_select_div"></div>
                            </div>
                        </div>

                        <div id="upload_drone_image_field_trial_info">
                        </div>

                        <center>
                        <button class="btn btn-primary" id="upload_drone_image_field_trial_select_continue">Go to Next Step</button>
                        </center>
                    </&>
                    <&| /util/workflow.mas:step, title=> "Drone Run" &>
                        <& /page/page_title.mas, title=>"Create a new drone run" &>

                        <table class="table table-bordered table-hover" id="drone_image_upload_drone_runs_table">
                            <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Imaging Event Name</th>
                                    <th>Imaging Event Type</th>
                                    <th>Imaging Event Description</th>
                                    <th>Imaging Event Date</th>
                                    <th>Drone Run GDD</th>
                                    <th>Sensor</th>
                                    <th>Field Trial Name</th>
                                    <th>Field Trial Description</th>
                                </tr>
                            </thead>
                        </table>

                        <!-- If drone run is selected above, the drone_run_project_id is passed to controller, negating need to create new drone run -->
                        <input id="drone_run_id" name="drone_run_id" type="hidden" value=""/>

                        <!-- If raw plot image boundaries are given -->
                        <input id="drone_run_raw_image_boundaries_first_plot_corner" name="drone_run_raw_image_boundaries_first_plot_corner" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_second_plot_direction" name="drone_run_raw_image_boundaries_second_plot_direction" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_plot_orientation" name="drone_run_raw_image_boundaries_plot_orientation" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_corners_json" name="drone_run_raw_image_boundaries_corners_json" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_corners_gps_json" name="drone_run_raw_image_boundaries_corners_gps_json" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_rotate_angle" name="drone_run_raw_image_boundaries_rotate_angle" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_row_num" name="drone_run_raw_image_boundaries_row_num" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_col_num" name="drone_run_raw_image_boundaries_col_num" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_flight_direction" name="drone_run_raw_image_boundaries_flight_direction" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_plot_width" name="drone_run_raw_image_boundaries_plot_width" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_plot_length" name="drone_run_raw_image_boundaries_plot_length" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_corners_plots_json" name="drone_run_raw_image_boundaries_corners_plots_json" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_latitude_precision" name="drone_run_raw_image_boundaries_latitude_precision" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_start_direction" name="drone_run_raw_image_boundaries_start_direction" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_turn_direction" name="drone_run_raw_image_boundaries_turn_direction" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_geographic_position" name="drone_run_raw_image_boundaries_geographic_position" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_image_top_direction" name="drone_run_raw_image_boundaries_image_top_direction" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_row_alley_width" name="drone_run_raw_image_boundaries_row_alley_width" type="hidden" value=""/>
                        <input id="drone_run_raw_image_boundaries_column_alley_width" name="drone_run_raw_image_boundaries_column_alley_width" type="hidden" value=""/>

                        <br/>
                        <div id="drone_image_upload_create_drone_inputs">
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Event Name (Must be unique): </label>
                                <div class="col-sm-9" >
                                    <input class="form-control" id="drone_run_name" name="drone_run_name" type="text" placeholder="e.g. Field Trial Name + Date of Flight" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Event Type:</label>
                                <div class="col-sm-9" >
                                    <select class="form-control" id="drone_run_type" name="drone_run_type">
                                        <option value="">Select One</option>
                                        <option value="Aerial Medium to High Res">Medium to High Resolution Aerial Drone Image(s)</option>
                                        <option value="Aerial Low Res">Low Resolution Aerial Drone Image(s)</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Sensor Type:</label>
                                <div class="col-sm-9" >
                                    <select class="form-control" id="drone_image_upload_camera_info" name="drone_image_upload_camera_info">
                                        <option value="">Select One</option>
                                        <option value="micasense_5">Micasense 5 Bands</option>
                                        <option value="ccd_color">CCD Sensor Color Image</option>
                                        <option value="cmos_color">CMOS Sensor Color Image</option>
                                        <option value="interpolated_elevation">Interpolated Elevation Image</option>
                                        <option value="em38_interpolated_ch1.0m">EM38 Interpolated CH1.0m Image</option>
                                        <option value="em38_interpolated_ch0.5m">EM38 Interpolated CH0.5m Image</option>
                                        <option value="em38_interpolated_ih1.0m">EM38 Interpolated IH1.0m Image</option>
                                        <option value="em38_interpolated_ih0.5m">EM38 Interpolated IH0.5m Image</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Vehicle: <button class="btn btn-sm btn-default" name="drone_run_imaging_vehicle_add_new" type="button">Add New Vehicle</button></label>
                                <div class="col-sm-9" >
                                    <div id="drone_run_imaging_vehicle_div"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Vehicle Battery Set:</label>
                                <div class="col-sm-9" >
                                    <div id="drone_run_imaging_vehicle_battery_div"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Event Description (e.g. flight altitude, flight plan name, overall weather conditions): </label>
                                <div class="col-sm-9" >
                                    <input class="form-control" id="drone_run_description" name="drone_run_description" type="text" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Imaging Event Date and Hour (Must be after the planting date):</label>
                                <div class="col-sm-9" >
                                    <input class="form-control" id="drone_run_date" name="drone_run_date" title="drone_run_date" type="text" />
                                </div>
                            </div>
                        </div>
                        <br/>

                        <center>
                        <button class="btn btn-primary" id="drone_image_upload_drone_run_continue">Go to Next Step</button>
                        </center>
                    </&>
                    <&| /util/workflow.mas:step, title=> "Image Info" &>
                        <& /page/page_title.mas, title=>"Stitched vs Unstitched and Number of Bands (Image Sets) To Upload" &>

                        <div class="well">
                            <ul>
                                <li>Raw images (unstitched) coming from your drone can be uploaded in a zip file. Maximum zipfile size is 2GB, but you can upload many zipfiles in the process.</li>
                                <li>Or you can choose to upload orthomosaic images (PNG).</li>
                                <li>Or you can upload any image and the single image can be for interpolated soil data, such as altitude or electrical conductance EC measurement s(CH1m, IH1m) from an EM38. </li>
                            </ul>
                        </div>
                        <div class="well">
                            <ul>
                                <li>It is possible to upload regular RGB or Black and White photos.</li>
                                <li>For multi-spectral cameras, it is possible to upload individual spectra orthomosaicphotos.</li>
                                <li>It is possible to upload raster digital surface model (DSM) images to estimate plant heights/volumes.</li>
                                <li>When uploading many separate bands of unstitched images, you will upload a single zipfile (.zip) which contains all images. In the zipfile each image is named following the template IMG_0001_1.tif, IMG_0001_2.tif, ..., IMG_0001_5.tif, ..., IMG_9999_5.tif. The final number represents the 5 bands coming from the camera, while the middle number is an index for the image capture. The middle number can be as many digits long as needed. The images should be in order in the zipfile. You will also need to upload a zipfile (.zip) containing the Micasense radiometrix calibration panel images, so that ImageBreed can produce the best result possible.</li>
                            </ul>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Are you not uploading an orthophotomosaic?:</label>
                            <div class="col-sm-9" >
                                <select class="form-control" id="drone_image_upload_drone_run_band_stitching" name="drone_image_upload_drone_run_band_stitching">
                                    <option value="">Select One</option>
                                    <!-- option value="yes">Yes, I am uploading a zipfile of raw images to stitch</option -->
                                    <!-- option value="yes_automated">Yes, I am uploading a zipfile of raw images to automatically get plot images from</option -->
                                    <option value="no">No, I am uploading a stitched orthomosaic</option>
                                    <option value="yes_raw">Yes, I am uploading a zipfile of raw images</option>
                                    <!--option value="yes_open_data_map_stitch">Yes, I am uploading a zipfile of raw images to stitch using OpenDataMap</option-->
                                </select>
                            </div>
                        </div>
                        <div class="form-group" id="drone_run_upload_drone_run_band_number_div">
                            <label class="col-sm-3 control-label">Number of Spectral Bands (Image Sets) To Upload:</label>
                            <div class="col-sm-9" >
                                <select class="form-control" id="drone_run_band_number" name="drone_run_band_number">
                                    <option value="">Select One</option>
                                    <option value="one_bw">One Black and White Image</option>
                                    <option value="one_rgb">One RGB Color Image</option>
                                    <option value="1">One Spectral Band or DSM raster</option>
                                    <option value="2">Two Separate Spectral Bands and/or DSM raster</option>
                                    <option value="3">Three Separate Spectral Bands and/or DSM raster</option>
                                    <option value="4">Four Separate Spectral Bands and/or DSM raster</option>
                                    <option value="5">Five Separate Spectral Bands and/or DSM raster</option>
                                    <option value="6">Six Separate Spectral Bands and/or DSM raster</option>
                                    <option value="7">Seven Separate Spectral Bands and/or DSM raster</option>
                                </select>
                            </div>
                        </div>

                        <center>
                        <button class="btn btn-primary" id="drone_image_upload_drone_run_band_continue">Go to Next Step</button>
                        </center>
                    </&>
                    <&| /util/workflow.mas:step, title=> "Images" &>
                        <& /page/page_title.mas, title=>"Select Image(s) to Upload" &>

                        <div id="upload_drone_images_select_section">
                        </div>

                        <center>
                        <button type="button" class="btn btn-info" name="upload_drone_imagery_submit" id="upload_drone_imagery_submit">Submit</button>
                        </center>
                    </&>

                </&>

                <div id="upload_drone_imagery_verify_status"></div>
            </form><br/>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_run_imaging_vehicle_add_new_modal" name="drone_run_imaging_vehicle_add_new_modal" tabindex="-1" role="dialog" aria-labelledby="uploadDroneImageryAddNewVehicleDialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="uploadDroneImageryAddNewVehicleDialog">Add New Imaging Vehicle</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-3 control-label">Imaging Vehicle Name (Must be unique): </label>
                    <div class="col-sm-9" >
                        <input class="form-control" id="drone_run_new_imaging_vehicle_name" name="drone_run_new_imaging_vehicle_name" type="text" placeholder="e.g. MyLabDrone1" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Imaging Vehicle Description: </label>
                    <div class="col-sm-9" >
                        <input class="form-control" id="drone_run_new_imaging_vehicle_desc" name="drone_run_new_imaging_vehicle_desc" type="text" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Battery Set Names (optional) (comma separated string of names e.g. blue,green,red,black): </label>
                    <div class="col-sm-9" >
                        <input class="form-control" id="drone_run_new_imaging_vehicle_battery_names" name="drone_run_new_imaging_vehicle_battery_names" type="text" placeholder="default_battery" value="default_battery"/>
                    </div>
                </div>
            </div>
            <br/><br/>
            <center>
                <button class="btn btn-primary" type="button" id="drone_run_new_imaging_vehicle_submit" name="drone_run_new_imaging_vehicle_submit">Submit</button>
            </center>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div id="manage_drone_imagery_raw_images_boundaries_div" style="display:none">
    <&| /util/workflow.mas, id=> "drone_imagery_upload_raw_immage_boundaries_workflow" &>
        <&| /util/workflow.mas:step, title=> "Intro" &>
            <& /page/page_title.mas, title=>"This workflow will guide you through clicking the boundaries of the field" &>
            <p>To automatically assign plot-polygons based on the GPS positions of the image captures, we need to know where the four corners of the field are. This workflow will have you click on the four points representing the corners of your field.</p>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_start_continue" name="drone_image_upload_raw_image_boundaries_start_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "North West Boundary Point" &>
            <div class="well">
                <ul>
                    <li>Rotate image if necessary.</li>
                    <li>Click on the point in the image representing the north west corner. Do not include border rows.</li>
                </ul>
            </div>

            <form class="form-horizontal">
                <div class="form-group form-group-sm">
                    <label class="col-sm-6 control-label">Rotate Counter-Clockwise Degrees: </label>
                    <div class="col-sm-6">
                        <input class="form-control" id="upload_drone_imagery_raw_boundaries_rotate_degrees_input" name="upload_drone_imagery_raw_boundaries_rotate_degrees_input" type="text" placeholder="Number of degrees to rotate" value="0.00"/>
                    </div>
                </div>
            </form>
            <button class="btn btn-primary btn-sm" id="upload_drone_imagery_raw_boundaries_rotate_image" onclick="return false;">Rotate Image</button>
            <hr>

            <canvas id="upload_drone_imagery_raw_images_boundary_tl_show"></canvas>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_tl_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "North East Boundary Point" &>
            <div class="well">
                <ul>
                    <li>Click on the point in the image representing the north east corner. Do not include border rows.</li>
                </ul>
            </div>

            <canvas id="upload_drone_imagery_raw_images_boundary_tr_show"></canvas>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_tr_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "South West Boundary Point" &>
            <div class="well">
                <ul>
                    <li>Click on the point in the image representing the south west corner. Do not include border rows.</li>
                </ul>
            </div>

            <canvas id="upload_drone_imagery_raw_images_boundary_bl_show"></canvas>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_bl_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "South East Boundary Point" &>
            <div class="well">
                <ul>
                    <li>Click on the point in the image representing the south east corner. Do not include border rows.</li>
                </ul>
            </div>

            <canvas id="upload_drone_imagery_raw_images_boundary_br_show"></canvas>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_br_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "Field Layout Params" &>
            <div class="form form-horizontal">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Number of rows (Number of horizontal rows as seen in context of your images): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_row_num" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_row_num">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Number of columns (Number of vertical columns as seen in context of your images): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_col_num" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_col_num">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Location of First Plot (e.g. plot number 1): </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_first_plot_start" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_first_plot_start">
                                    <option value="north_west">North West Corner</option>
                                    <option value="north_east">North East Corner</option>
                                    <option value="south_west">South West Corner</option>
                                    <option value="south_east">South East Corner</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Second Plot Follows First Plot Going: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_second_plot_follows" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_second_plot_follows">
                                    <option value="south_to_north">South to North</option>
                                    <option value="north_to_south">North to South</option>
                                    <option value="east_to_west">East to West</option>
                                    <option value="west_to_east">West to East</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Plot Number Orientation: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_orientation" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_orientation">
                                    <option value="serpentine">Serpentine</option>
                                    <option value="zigzag">Zigzag (Not Serpentine)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <!--div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Did you fly in the direction of: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_flight_direction" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_flight_direction">
                                    <option value="rows">Rows</option>
                                    <option value="columns">Columns</option>
                                </select>
                            </div>
                        </div>
                    </div-->
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Top of image captures are in direction: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_image_top_direction" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_image_top_direction">
                                    <option value="north">North</option>
                                    <option value="south">South</option>
                                    <option value="east">East</option>
                                    <option value="west">West</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Flight started going in direction: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_start_direction" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_start_direction">
                                    <option value="south_to_north">South to North</option>
                                    <option value="north_to_south">North to South</option>
                                    <option value="east_to_west">East to West</option>
                                    <option value="west_to_east">West to East</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Flight turns followed going in direction: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_turn_direction" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_turn_direction">
                                    <option value="south_to_north">South to North</option>
                                    <option value="north_to_south">North to South</option>
                                    <option value="east_to_west">East to West</option>
                                    <option value="west_to_east">West to East</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Plot width (m): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_width" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_width">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Plot length (m): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_length" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_length">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Flight location latitude (assuming 7 digit GPS precision): </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_latitude" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_latitude">
                                    <option value="7.871">45 N/S</option>
                                    <option value="10.247">23 N/S</option>
                                    <option value="11.132">Equator</option>
                                    <option value="4.3496">67 N/S</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Geographic Position: </label>
                            <div class="col-sm-6">
                                <select class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygon_geographic_position" name="drone_imagery_upload_raw_image_boundaries_plot_polygon_geographic_position">
                                    <option value="Q1">North of 0 and West of 0 (e.g. North America)</option>
                                    <option value="Q2" disabled>North of 0 and East of 0 (e.g. Europe)</option>
                                    <option value="Q3" disabled>South of 0 and West of 0 (e.g. South America)</option>
                                    <option value="Q4" disabled>South of 0 and East of 0 (e.g. Australia)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Distance in between rows (m) (alleys between horizontal rows as seen in context of your image): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_row_width" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_row_width">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-6 control-label">Distance in between columns (m) (alleys between vertical columns as seen in context of your image): </label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_column_width" name="drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_column_width">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="return false;" id="drone_image_upload_raw_image_boundaries_layout_continue">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "Check Plot Images" &>
            <div id="drone_imagery_upload_raw_image_boundaries_plot_polygon_verify">
            </div>
        </&>
    </&>
</div>

<script defer="defer">

var drone_run_band_unstitched_raw_image_boundaries = 0;

jQuery(document).ready(function() {

    get_select_box('trials', 'upload_drone_image_trial_select_div', { 'name' : 'drone_run_field_trial_id', 'id' : 'drone_run_field_trial_id', 'empty':1, 'multiple':0 });

    var upload_drone_imagery_vehicle_id;
    jQuery('#upload_drone_imagery_link').click( function() {
        jQuery('#upload_drone_imagery_dialog').modal("show");
        upload_drone_imagery_vehicle_id = jQuery('#drone_run_imaging_vehicle_id').val();

        if (upload_drone_imagery_vehicle_id) {
            _show_vehicle_battery_select();
        }
    });

    jQuery(document).on('change', '#drone_run_field_trial_id', function() {
        var field_trial_id = jQuery(this).val();
        jQuery('#drone_image_upload_drone_runs_table').DataTable({
            destroy : true,
            ajax : '/api/drone_imagery/drone_runs?select_checkbox_name=upload_drone_imagery_drone_run_select&field_trial_ids='+field_trial_id+'&disable=1'
        });
    });

    jQuery('#upload_drone_image_field_trial_select_continue').click(function(){
        if (jQuery('#drone_run_field_trial_id').val() == ''){
            alert('Please select a field trial first');
        } else {
            jQuery.ajax({
                url : '/ajax/breeders/trial/'+jQuery('#drone_run_field_trial_id').val()+'/details',
                success: function(response){
                    console.log(response);

                    if (response.details.planting_date) {
                        if (response.details.location_noaa_station_id) {
                            Workflow.complete('#upload_drone_image_field_trial_select_continue');
                            Workflow.focus('#drone_imagery_upload_workflow', 2);
                        }
                        else {
                            jQuery('#upload_drone_image_field_trial_info').html("<div class='well well-sm'>Please set the NOAA location id for this field trial before proceeding. You can do so from the manage locations page.</div>");
                        }
                    }
                    else {
                        jQuery('#upload_drone_image_field_trial_info').html("<div class='well well-sm'>Please set the planting date for this field trial before proceeding. You can do so from the trial's <a href='/breeders/trial/"+jQuery('#drone_run_field_trial_id').val()+"' target=_blank>Detail Page</a></div>");
                    }
                    return false;
                },
                error: function(response){
                    alert('Error checking field trial details!');
                }
            });
        }
        return false;
    });

    var drone_run_date_element = jQuery("#drone_run_date");
    set_daterangepicker_default (drone_run_date_element);
    jQuery('input[title="drone_run_date"]').daterangepicker(
        {
            "singleDatePicker": true,
            "showDropdowns": true,
            "autoUpdateInput": false,
            "timePicker": true,
            "timePicker24Hour": true,
        },
        function(start){
            drone_run_date_element.val(start.format('YYYY/MM/DD HH:mm:ss'));
        }
    );

    get_select_box('imaging_event_vehicles', 'drone_run_imaging_vehicle_div', {'id':'drone_run_imaging_vehicle_id', 'name':'drone_run_imaging_vehicle_id'});

    function _show_vehicle_battery_select() {
        jQuery.ajax({
            url : '/api/drone_imagery/get_vehicle?vehicle_id='+upload_drone_imagery_vehicle_id,
            success: function(response){
                console.log(response);
                if (response.success) {
                    var html = "<select class='form-control' name='drone_run_imaging_vehicle_battery_name' id='drone_run_imaging_vehicle_battery_name'>";
                    for (var name in response.vehicles[0].properties.batteries) {
                        if (response.vehicles[0].properties.batteries.hasOwnProperty(name)) {
                            if (response.vehicles[0].properties.batteries[name]['obsolete'] == 0) {
                                html = html + "<option value='"+name+"'>"+name+"</option>";
                            }
                        }
                    }
                    html = html + "</select>";
                    jQuery('#drone_run_imaging_vehicle_battery_div').html(html);
                }
                else if (response.error) {
                    alert(response.error);
                }
                return false;
            },
            error: function(response){
                alert('Error getting vehicle!');
            }
        });
    }

    jQuery('button[name="drone_run_imaging_vehicle_add_new"]').click(function(e){
        e.preventDefault();
        jQuery('#drone_run_imaging_vehicle_add_new_modal').modal('show');
    });

    jQuery('#drone_run_new_imaging_vehicle_submit').click(function(e){
        e.preventDefault();
        var vehicle_name = jQuery('#drone_run_new_imaging_vehicle_name').val();
        var vehicle_desc = jQuery('#drone_run_new_imaging_vehicle_desc').val();
        var vehicle_batteries = jQuery('#drone_run_new_imaging_vehicle_battery_names').val();

        if (vehicle_name == '' || vehicle_desc == '') {
            alert('Please give a vehicle name and description!');
            return false;
        }
        if (vehicle_batteries == '') {
            alert('Please give at least default battery name!');
            return false;
        }

        jQuery.ajax({
            url : '/api/drone_imagery/new_imaging_vehicle?vehicle_name='+vehicle_name+'&vehicle_description='+vehicle_desc+'&battery_names='+vehicle_batteries,
            success: function(response){
                console.log(response);
                if (response.error) {
                    alert(response.error);
                }
                else if (response.success) {
                    alert('Vehicle added!');
                    get_select_box('imaging_event_vehicles', 'drone_run_imaging_vehicle_div', {'id':'drone_run_imaging_vehicle_id', 'name':'drone_run_imaging_vehicle_id'});
                    upload_drone_imagery_vehicle_id = response.new_vehicle_id;
                    _show_vehicle_battery_select();
                }

                return false;
            },
            error: function(response){
                alert('Error adding new imaging vehicle!');
            }
        });
    });

    jQuery(document).on('change', '#drone_run_imaging_vehicle_id', function(){
        upload_drone_imagery_vehicle_id = jQuery(this).val();
        _show_vehicle_battery_select();
    });

    jQuery('#drone_image_upload_drone_run_band_stitching').change(function(){
        if (jQuery('#drone_image_upload_drone_run_band_stitching').val() == 'yes' || jQuery('#drone_image_upload_drone_run_band_stitching').val() == 'yes_raw' || jQuery('#drone_image_upload_drone_run_band_stitching').val() == 'yes_automated' || jQuery('#drone_image_upload_drone_run_band_stitching').val() == 'yes_open_data_map_stitch') {
            jQuery('#drone_run_upload_drone_run_band_number_div').hide();
        } else {
            jQuery('#drone_run_upload_drone_run_band_number_div').show();
        }
    });

    jQuery('#drone_image_upload_drone_run_band_continue').click(function(){

        var drone_run_band_number = jQuery('#drone_run_band_number').val();
        var drone_run_band_unstitched = jQuery('#drone_image_upload_drone_run_band_stitching').val();
        var drone_run_camera_info = jQuery('#drone_image_upload_camera_info').val();
        var drone_run_id = jQuery('#drone_run_id').val();
        var drone_run_name = jQuery('#drone_run_name').val();
        var drone_run_date = jQuery('#drone_run_date').val();
        var drone_run_vehicle_id = jQuery('#drone_run_imaging_vehicle_id').val();
        var drone_run_vehicle_battery_name = jQuery('#drone_run_imaging_vehicle_battery_name').val();

        if (drone_run_id != '' && (drone_run_band_unstitched == 'yes' || drone_run_band_unstitched == 'yes_raw' || drone_run_band_unstitched == 'yes_automated' || drone_run_band_unstitched == 'yes_open_data_map_stitch')) {
            alert('Please create a new drone run band if you are uploading a zipfile of raw images.');
            return false;
        }
        if (drone_run_band_unstitched == '') {
            alert('Please select whether you are uploading orthomosaic images.');
            return false;
        }
        if (drone_run_id == '' && drone_run_camera_info == '') {
            alert('Please select the camera type used.');
            return false;
        }

        if (drone_run_vehicle_id == '' || drone_run_vehicle_battery_name == '') {
            alert('Please select an imaging event vehicle and the associated battery! You can create a new vehicle if needed');
            return false;
        }

        var html = '';
        if (drone_run_band_unstitched == 'no') {
            if (drone_run_band_number == '') {
                alert('Please select the number of drone run bands you will upload');
            } else {
                if (drone_run_band_number == 'one_bw' || drone_run_band_number == 'one_rgb') {
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_1" name="drone_run_band_name_1" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_RGB" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_1" name="drone_run_band_description_1" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_1" name="drone_run_band_type_1"><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_1" name="drone_run_band_stitched_ortho_image_1" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                } else if (drone_run_band_number == 5 && drone_run_camera_info == 'micasense_5'){
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_0" name="drone_run_band_name_0" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_Blue" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_0" name="drone_run_band_description_0" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_0" name="drone_run_band_type_0" disabled><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)" selected>Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_0" name="drone_run_band_stitched_ortho_image_0" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_1" name="drone_run_band_name_1" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_Green" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_1" name="drone_run_band_description_1" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_1" name="drone_run_band_type_1" disabled><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)" selected>Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_1" name="drone_run_band_stitched_ortho_image_1" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_2" name="drone_run_band_name_2" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_Red" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_2" name="drone_run_band_description_2" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_2" name="drone_run_band_type_2" disabled><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)" selected>Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_2" name="drone_run_band_stitched_ortho_image_2" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_3" name="drone_run_band_name_3" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_NIR" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_3" name="drone_run_band_description_3" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_3" name="drone_run_band_type_3" disabled><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)" selected>NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_3" name="drone_run_band_stitched_ortho_image_3" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                    html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_4" name="drone_run_band_name_4" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" value="'+drone_run_name+'_'+drone_run_date+'_RedEdge" disabled/></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_4" name="drone_run_band_description_4" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_4" name="drone_run_band_type_4" disabled><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)" selected>Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                    html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_4" name="drone_run_band_stitched_ortho_image_4" encoding="multipart/form-data" /></div></div>';
                    html = html + '</div>';
                } else {
                    for (var i=0; i<drone_run_band_number; i++) {
                        html = html + '<div class="well well-sm"><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Name (Must be unique): </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_name_'+i+'" name="drone_run_band_name_'+i+'" type="text" placeholder="e.g. Field Trial Name + Date + Band Type" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Description: </label><div class="col-sm-9" ><input class="form-control" id="drone_run_band_description_'+i+'" name="drone_run_band_description_'+i+'" type="text" /></div></div><div class="form-group"><label class="col-sm-3 control-label">Drone Run Band Type:</label><div class="col-sm-9" ><select class="form-control" id="drone_run_band_type_'+i+'" name="drone_run_band_type_'+i+'"><option value="Black and White Image">Black and White Image</option><option value="RGB Color Image">RGB Color Image</option><option value="Blue (450-520nm)">Blue (450-520nm)</option><option value="Green (515-600nm)">Green (515-600nm)</option><option value="Red (600-690nm)">Red (600-690nm)</option><option value="Red Edge (690-750nm)">Red Edge (690-750nm)</option><option value="NIR (780-3000nm)">NIR (780-3000nm)</option><option value="MIR (3000-50000nm)">MIR (3000-50000nm)</option><option value="FIR (50000-1000000nm)">FIR (50000-1000000nm)</option><option value="Thermal IR (9000-14000nm)">Thermal IR (9000-14000nm)</option><option value="Raster DSM">Raster DSM</option></select></div></div>';
                        html = html + '<div class="form-group"><label class="col-sm-3 control-label">Image: (.jpeg, .png)</label><div class="col-sm-9" ><input type="file" id="drone_run_band_stitched_ortho_image_'+i+'" name="drone_run_band_stitched_ortho_image_'+i+'" encoding="multipart/form-data" /></div></div>';
                        html = html + '</div>';
                    }
                }
            }
        }
        else if (drone_run_band_unstitched == 'yes') {
            html = html + '<div class="well well-sm">';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">Drone Images ZipFile (.zip) (2GB Maximum): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_zipfile" name="upload_drone_images_zipfile" encoding="multipart/form-data" /></div></div>';

            if (drone_run_camera_info == 'micasense_5') {
                html = html + '<div class="form-group"><label class="col-sm-3 control-label">Micasense Radiometric Calibration Images ZipFile (.zip with 5 images in it): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_panel_zipfile" name="upload_drone_images_panel_zipfile" encoding="multipart/form-data" /></div></div>';
            }

            html = html + '<div class="form-group"><label class="col-sm-3 control-label">Working Image Scale (Megapixels): </label><div class="col-sm-9" ><select class="form-control" id="upload_drone_images_stitching_work_pix" name="upload_drone_images_stitching_work_pix" disabled><option value="-1">Full</option><option value="0.6">0.6</option><option value="0.4">0.4</option><option value="1.0">1.0</option><option value="2.0">2.0</option></select></div></div>';
            html = html + '</div>';
        }

        else if (drone_run_band_unstitched == 'yes_raw' || drone_run_band_unstitched == 'yes_open_data_map_stitch') {
            html = html + '<div class="well well-sm">';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">Drone Images ZipFile (.zip) (2GB Maximum): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_zipfile" name="upload_drone_images_zipfile" encoding="multipart/form-data" /></div></div>';

            if (drone_run_camera_info == 'micasense_5') {
                html = html + '<div class="form-group"><label class="col-sm-3 control-label">Micasense Radiometric Calibration Images ZipFile (.zip): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_panel_zipfile" name="upload_drone_images_panel_zipfile" encoding="multipart/form-data" /></div></div>';
            }

            html = html + '</div>';
        }

        else if (drone_run_band_unstitched == 'yes_automated') {

            html = html + '<div class="well well-sm">';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">North west Corner NIR Image (.tiff): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_top_left_image" name="upload_drone_images_top_left_image" encoding="multipart/form-data" /></div></div>';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">North east Corner NIR Image (.tiff): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_top_right_image" name="upload_drone_images_top_right_image" encoding="multipart/form-data" /></div></div>';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">South west Corner NIR Image (.tiff): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_bottom_left_image" name="upload_drone_images_bottom_left_image" encoding="multipart/form-data" /></div></div>';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">South east Corner NIR Image (.tiff): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_bottom_right_image" name="upload_drone_images_bottom_right_image" encoding="multipart/form-data" /></div></div>';

            html = html + '<a class="btn btn-primary" id="upload_drone_images_boundaries_button" name="upload_drone_images_boundaries_button" onClick="uploadDroneImageryRawImageBoundaryShow();">Determine Field Boundaries</a>';
            html = html + '</div>';

            html = html + '<div class="well well-sm">';
            html = html + '<div class="form-group"><label class="col-sm-3 control-label">Drone Images ZipFile (.zip) (2GB Maximum): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_zipfile" name="upload_drone_images_zipfile" encoding="multipart/form-data" /></div></div>';

            if (drone_run_camera_info == 'micasense_5') {
                html = html + '<div class="form-group"><label class="col-sm-3 control-label">Micasense Radiometric Calibration Images ZipFile (.zip): </label><div class="col-sm-9" ><input type="file" id="upload_drone_images_panel_zipfile" name="upload_drone_images_panel_zipfile" encoding="multipart/form-data" /></div></div>';
            }

            html = html + '</div>';
        }

        jQuery('#upload_drone_images_select_section').html(html);
        Workflow.complete('#drone_image_upload_drone_run_band_continue');
        Workflow.focus('#drone_imagery_upload_workflow', 4);
        return false;
    });

    jQuery('#drone_image_upload_drone_run_continue').click(function(){
        var selected = [];
        jQuery('input[name="upload_drone_imagery_drone_run_select"]:checked').each(function() {
            selected.push(jQuery(this).val());
        });
        if (selected.length > 1){
            alert('Only select one drone run!');
        } else {
            if (selected.length == 0 && jQuery('#drone_run_name').val() == ''){
                alert('Select a drone run or create a new one!');
            } else if (selected.length == 1 && jQuery('#drone_run_name').val() != ''){
                alert('If you selected a drone run, do not try to make a new one at the same time!');
            } else if (selected.length == 1 && jQuery('#drone_run_name').val() == ''){
                jQuery('#drone_run_id').val(selected[0]);
                Workflow.complete('#drone_image_upload_drone_run_continue');
                Workflow.focus('#drone_imagery_upload_workflow', 3);
            } else if (selected.length == 0 && jQuery('#drone_run_name').val() != '') {
                if (jQuery('#drone_run_description').val() == ''){
                    alert('Please give a drone run description.');
                } else if (jQuery('#drone_run_date').val() == ''){
                    alert('Please give a drone run date.');
                } else if (jQuery('#drone_run_type') == ''){
                    alert('Please select a drone run type');
                } else {
                    jQuery('#drone_run_id').val('');
                    jQuery.ajax({
                        url : '/api/drone_imagery/upload_drone_imagery_check_drone_name?drone_run_name='+jQuery('#drone_run_name').val(),
                        success: function(response){
                            console.log(response);

                            if (response.success) {
                                Workflow.complete('#drone_image_upload_drone_run_continue');
                                Workflow.focus('#drone_imagery_upload_workflow', 3);
                            }
                            else if (response.error) {
                                alert("Error: " + response.error);
                            }
                            return false;
                        },
                        error: function(response){
                            alert('Error checking drone run name!');
                        }
                    });
                }
            }
        }
        return false;
    });


    var drone_run_band_unstitched = '';
    jQuery('#upload_drone_imagery_submit').click(function(){
        var drone_run_band_number = jQuery('#drone_run_band_number').val();
        drone_run_band_unstitched = jQuery('#drone_image_upload_drone_run_band_stitching').val();
        var drone_run_camera_info = jQuery('#drone_image_upload_camera_info').val();
        if (drone_run_band_unstitched == '') {
            alert('Please select whether you are uploading unstitched images.');
            return false;
        }
        if (drone_run_camera_info == '') {
            alert('Please select the camera type used.');
            return false;
        }

        if (drone_run_band_unstitched == 'no') {
            if (drone_run_band_number == '') {
                alert('Please select the number of drone run bands you will upload');
                return;
            } else {
                if (drone_run_band_number == 'one_bw' || drone_run_band_number == 'one_rgb') {
                    if (jQuery('#drone_run_band_name_1').val() == ''){
                        alert('Give a new drone run band name!');
                        return;
                    } else if (jQuery('#drone_run_band_description_1').val() == ''){
                        alert('Please give a drone run band description.');
                        return;
                    } else if (jQuery('#drone_run_band_type_1').val() == ''){
                        alert('Please select a drone run band type.');
                        return;
                    }
                    if (jQuery('#drone_run_band_stitched_ortho_image_1').val() == '') {
                        alert('Please select an image');
                        return;
                    }
                } else {
                    for (var i=0; i<drone_run_band_number; i++) {
                        if (jQuery('#drone_run_band_name_'+i).val() == ''){
                            alert('Give a new drone run band name!');
                            return;
                        } else if (jQuery('#drone_run_band_description_'+i).val() == ''){
                            alert('Please give a drone run band description.');
                            return;
                        } else if (jQuery('#drone_run_band_type_'+i).val() == ''){
                            alert('Please select a drone run band type.');
                            return;
                        }
                        if (jQuery('#drone_run_band_stitched_ortho_image_'+i).val() == '') {
                            alert('Please select an image');
                            return;
                        }
                    }
                }
            }
        } else if (drone_run_band_unstitched == 'yes' || drone_run_band_unstitched == 'yes_raw' || drone_run_band_unstitched == 'yes_open_data_map_stitch' || (drone_run_band_unstitched == 'yes_automated' && drone_run_band_unstitched_raw_image_boundaries == 0)) {
            if (jQuery('#upload_drone_images_zipfile').val() == ''){
                alert('Please select a zipfile of images');
                return;
            }
            // if (jQuery('#upload_drone_images_panel_zipfile').val() == ''){
            //    alert('Please select a zipfile of Micasense radiocalibration panel images');
            //    return;
            // }
        }

        if (drone_run_band_unstitched == 'yes_automated' && drone_run_band_unstitched_raw_image_boundaries == 1) {
            console.log('1');
            console.log(drone_run_band_unstitched_raw_image_boundaries);
            upload_drone_imagery_raw_images_automated_boundaries_form();
        }
        else {
            console.log('2');
            console.log(drone_run_band_unstitched_raw_image_boundaries);
            upload_drone_imagery_form();
        }

    });

    function upload_drone_imagery_form() {
        jQuery('#upload_drone_imagery_form').submit(function(e) {
            jQuery(':disabled').each(function(e) {
                jQuery(this).removeAttr('disabled');
            })
        });
        jQuery('#upload_drone_imagery_form').attr("action", "/api/drone_imagery/upload_drone_imagery");
        jQuery("#upload_drone_imagery_form").submit();
    }

    var uploadDroneRawImagesBoundariesTLImageId;
    var uploadDroneRawImagesBoundariesTRImageId;
    var uploadDroneRawImagesBoundariesBLImageId;
    var uploadDroneRawImagesBoundariesBRImageId;
    var uploadDroneRawImagesBoundariesCanvas;
    var uploadDroneRawImagesBoundariesCtx;
    var uploadDroneRawImagesBoundariesCorner;
    var uploadDroneRawImagesBoundariesPoints = {};
    var uploadDroneRawImagesBoundariesRotateAngle = 0.00;
    var uploadDroneRawImagesBoundariesDroneRunProjectId;
    var uploadDroneRawImagesBoundariesFirstPlotCorner;
    var uploadDroneRawImagesBoundariesSecondPlotDirection;
    var uploadDroneRawImagesBoundariesPlotOrientation;
    var uploadDroneRawImagesBoundariesCornersGPS;
    var uploadDroneRawImagesBoundariesNumRows;
    var uploadDroneRawImagesBoundariesNumCols;
    var uploadDroneRawImagesBoundariesFlightDir;
    var uploadDroneRawImagesBoundariesPlotWidth;
    var uploadDroneRawImagesBoundariesPlotLength;
    var uploadDroneRawImagesBoundariesPlotClickCorner = [];
    var uploadDroneRawImagesBoundariesPlotClickDisplayCorner = [];
    var uploadDroneRawImagesBoundariesPlotClickCorners = {};
    var uploadDroneRawImagesBoundariesLatitudePrecision;
    var uploadDroneRawImagesBoundariesStartDirection;
    var uploadDroneRawImagesBoundariesTurnDirection;
    var uploadDroneRawImagesBoundariesGeographicPosition;
    var uploadDroneRawImagesBoundariesImageTopDirection;
    var uploadDroneRawImagesBoundariesRowAlleyWidth;
    var uploadDroneRawImagesBoundariesColumnAlleyWidth;

    jQuery('#upload_drone_imagery_form').iframePostForm({
        json: true,
        post: function () {
            jQuery('#working_modal').modal("show");
            if (drone_run_band_unstitched == 'yes') {
                jQuery('#working_msg').html("It can take a very long time to assemble the orthophotomosaic depending on the number of images uploaded. Times range from 15 minutes to 5 days depending on the number of images, not including upload time.");
            }
        },
        complete: function (response) {
            console.log(response);
            jQuery('#working_msg').html("");

            jQuery('#working_modal').modal("hide");
            if (response.error) {
                alert(response.error);
                return;
            }
            if (drone_run_band_unstitched == 'yes' || drone_run_band_unstitched == 'yes_raw' || drone_run_band_unstitched == 'yes_open_data_map_stitch' || drone_run_band_unstitched == 'no') {
                location.reload();
            }
            else if (drone_run_band_unstitched == 'yes_automated') {
                uploadDroneRawImagesBoundariesDroneRunProjectId = response.drone_run_project_id;
                if (response.corners_gps) {
                    uploadDroneRawImagesBoundariesCornersGPS = response.corners_gps;

                    jQuery('#drone_run_id').val(uploadDroneRawImagesBoundariesDroneRunProjectId);

                    var canvas = document.getElementById('upload_drone_imagery_raw_images_boundary_tl_show');
                    uploadDroneRawImagesBoundariesCtx = canvas.getContext('2d');
                    var image_tl = new Image();
                    image_tl.onload = function () {
                        canvas.width = this.naturalWidth;
                        canvas.height = this.naturalHeight;
                        uploadDroneRawImagesBoundariesCtx.drawImage(this, 0, 0);
                    };
                    image_tl.src = response.tl_url;
                    uploadDroneRawImagesBoundariesCanvas = canvas;
                    uploadDroneRawImagesBoundariesCanvas.onmousedown = GetCoordinatesRawImageBoundaries;
                    uploadDroneRawImagesBoundariesCorner = 'north_west';
                    uploadDroneRawImagesBoundariesTLImageId = response.tl_image_id;

                    var canvas_tr = document.getElementById('upload_drone_imagery_raw_images_boundary_tr_show');
                    var ctx_tr = canvas_tr.getContext('2d');
                    var image_tr = new Image();
                    image_tr.onload = function () {
                        canvas_tr.width = this.naturalWidth;
                        canvas_tr.height = this.naturalHeight;
                        ctx_tr.drawImage(this, 0, 0);
                    };
                    image_tr.src = response.tr_url;
                    canvas_tr.onmousedown = GetCoordinatesRawImageBoundaries;
                    uploadDroneRawImagesBoundariesTRImageId = response.tr_image_id;

                    var canvas_bl = document.getElementById('upload_drone_imagery_raw_images_boundary_bl_show');
                    var ctx_bl = canvas_bl.getContext('2d');
                    var image_bl = new Image();
                    image_bl.onload = function () {
                        canvas_bl.width = this.naturalWidth;
                        canvas_bl.height = this.naturalHeight;
                        ctx_bl.drawImage(this, 0, 0);
                    };
                    image_bl.src = response.bl_url;
                    canvas_bl.onmousedown = GetCoordinatesRawImageBoundaries;
                    uploadDroneRawImagesBoundariesBLImageId = response.bl_image_id;

                    var canvas_br = document.getElementById('upload_drone_imagery_raw_images_boundary_br_show');
                    var ctx_br = canvas_br.getContext('2d');
                    var image_br = new Image();
                    image_br.onload = function () {
                        canvas_br.width = this.naturalWidth;
                        canvas_br.height = this.naturalHeight;
                        ctx_br.drawImage(this, 0, 0);
                    };
                    image_br.src = response.br_url;
                    canvas_br.onmousedown = GetCoordinatesRawImageBoundaries;
                    uploadDroneRawImagesBoundariesBRImageId = response.br_image_id;

                }
                else {
                    var drone_imagery_upload_raw_image_boundaries_plots = response.drone_run_band_raw_image_boundaries_temp_images;
                    var html = '<table class="table table-bordered table-hover"><thead><tr><th>Plot</th><th>Blue Image</th><th>Green Image</th><th>Red Image</th><th>NIR Image</th><th>Red Edge Image</th></tr></thead><tbody>';
                    for (i=0; i<drone_imagery_upload_raw_image_boundaries_plots.length; i++) {
                        html += '<tr><td><a href="/stock/'+drone_imagery_upload_raw_image_boundaries_plots[i][0]+'">'+drone_imagery_upload_raw_image_boundaries_plots[i][1]+'</a> Plot Number:  '+drone_imagery_upload_raw_image_boundaries_plots[i][2]+'</td><td><img src="'+drone_imagery_upload_raw_image_boundaries_plots[i][3]+'"></td><td><img src="'+drone_imagery_upload_raw_image_boundaries_plots[i][4]+'"></td><td><img src="'+drone_imagery_upload_raw_image_boundaries_plots[i][5]+'"></td><td><img src="'+drone_imagery_upload_raw_image_boundaries_plots[i][6]+'"></td><td><img src="'+drone_imagery_upload_raw_image_boundaries_plots[i][7]+'"></td></tr>';
                    }
                    html = html + '</tbody></table>';
                    jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygon_verify').html(html);

                    Workflow.complete("#drone_image_upload_raw_image_boundaries_layout_continue");
                    Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 6);
                }

                jQuery('#upload_drone_imagery_dialog').modal('hide');

                jQuery('#manage_drone_imagery_crop_div').hide();
                jQuery('#manage_drone_imagery_top_div').hide();
                jQuery('#manage_drone_imagery_plot_polygons_div').hide();
                jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
                jQuery('#manage_drone_imagery_remove_background_div').hide();
                jQuery('#manage_drone_imagery_rotate_div').hide();
                jQuery('#manage_drone_imagery_vegetative_index_div').hide();
                jQuery('#manage_drone_imagery_standard_process_div').hide();
                jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
                jQuery('#manage_drone_imagery_loading_div').hide();
                jQuery('#manage_drone_imagery_raw_images_boundaries_div').show();
                window.scrollTo(0,0);
            }
        }
    });

    function GetCoordinatesRawImageBoundaries(e) {
        var PosX = 0;
        var PosY = 0;
        var ImgPos;
        ImgPos = FindPositionRawImageBoundaries(uploadDroneRawImagesBoundariesCanvas);
        if (!e) var e = window.event;
        if (e.pageX || e.pageY) {
            PosX = e.pageX;
            PosY = e.pageY;
        }
        else if (e.clientX || e.clientY) {
            PosX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            PosY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
        PosX = PosX - ImgPos[0];
        PosY = PosY - ImgPos[1];

        var clicked_point = {x:PosX, y:PosY};
        drawWaypointsRawImageBoundaries([clicked_point]);
        uploadDroneRawImagesBoundariesPoints[uploadDroneRawImagesBoundariesCorner] = clicked_point;
        console.log(uploadDroneRawImagesBoundariesPoints);

        alert('Now click on the four corners of the corner plot. Close the rectangle to total 5 clicks.');
        uploadDroneRawImagesBoundariesCanvas.onmousedown = GetCoordinatesRawImageBoundariesCornerPlot;
    }

    function GetCoordinatesRawImageBoundariesCornerPlot(e) {
        var PosX = 0;
        var PosY = 0;
        var ImgPos;
        ImgPos = FindPositionRawImageBoundaries(uploadDroneRawImagesBoundariesCanvas);
        if (!e) var e = window.event;
        if (e.pageX || e.pageY) {
            PosX = e.pageX;
            PosY = e.pageY;
        }
        else if (e.clientX || e.clientY) {
            PosX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            PosY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
        PosX = PosX - ImgPos[0];
        PosY = PosY - ImgPos[1];

        if (uploadDroneRawImagesBoundariesPlotClickCorner.length < 4){
            uploadDroneRawImagesBoundariesPlotClickCorner.push({x:PosX, y:PosY});
            uploadDroneRawImagesBoundariesPlotClickDisplayCorner.push({x:PosX, y:PosY});
        } else {
            uploadDroneRawImagesBoundariesPlotClickDisplayCorner.push({x:PosX, y:PosY});
            uploadDroneRawImagesBoundariesPlotClickCorners[uploadDroneRawImagesBoundariesCorner] = uploadDroneRawImagesBoundariesPlotClickCorner;
            console.log(uploadDroneRawImagesBoundariesPlotClickCorners);
        }
        if (uploadDroneRawImagesBoundariesPlotClickDisplayCorner.length > 5){
            uploadDroneRawImagesBoundariesPlotClickCorner = [];
            uploadDroneRawImagesBoundariesPlotClickDisplayCorner = [];
        }
        drawPolylineRawImageBoundaries(uploadDroneRawImagesBoundariesPlotClickDisplayCorner);
        drawWaypointsRawImageBoundaries(uploadDroneRawImagesBoundariesPlotClickDisplayCorner, undefined, 0);
    }

    function FindPositionRawImageBoundaries(oElement) {
        if(typeof( oElement.offsetParent ) != "undefined") {
            for(var posX = 0, posY = 0; oElement; oElement = oElement.offsetParent) {
                posX += oElement.offsetLeft;
                posY += oElement.offsetTop;
            }
            return [ posX, posY ];
        } else {
            return [ oElement.x, oElement.y ];
        }
    }

    function drawPolylineRawImageBoundaries(points){
        if (points.length == 4) {
            points.push(points[0]);
        }
        for(var i=0;i<points.length;i++){
            uploadDroneRawImagesBoundariesCtx.beginPath();
            uploadDroneRawImagesBoundariesCtx.moveTo(points[0].x,points[0].y);
            for(var i=1;i<points.length;i++){
                uploadDroneRawImagesBoundariesCtx.lineTo(points[i].x,points[i].y);
            }
            uploadDroneRawImagesBoundariesCtx.strokeStyle='blue';
            uploadDroneRawImagesBoundariesCtx.lineWidth=5;
            uploadDroneRawImagesBoundariesCtx.stroke();
        }
    }

    function drawWaypointsRawImageBoundaries(points){
        console.log(points);
        for(var i=0;i<points.length;i++){
            uploadDroneRawImagesBoundariesCtx.beginPath();
            uploadDroneRawImagesBoundariesCtx.arc(points[i].x,points[i].y,4,0,Math.PI*2);
            uploadDroneRawImagesBoundariesCtx.closePath();
            uploadDroneRawImagesBoundariesCtx.strokeStyle='black';
            uploadDroneRawImagesBoundariesCtx.lineWidth=1;
            uploadDroneRawImagesBoundariesCtx.stroke();
            uploadDroneRawImagesBoundariesCtx.fillStyle='white';
            uploadDroneRawImagesBoundariesCtx.fill();
        }
    }

    function upload_drone_imagery_raw_images_automated_boundaries_form() {
        jQuery('#upload_drone_imagery_form').attr("action", "/api/drone_imagery/upload_drone_imagery_raw_images_automated_boundaries");
        jQuery("#upload_drone_imagery_form").submit();
    }

    jQuery('#upload_drone_imagery_raw_boundaries_rotate_image').click(function(){
        var rotate_stitched_image_degrees = parseFloat(jQuery('#upload_drone_imagery_raw_boundaries_rotate_degrees_input').val());

        applyShowRotateImageRawImageBoundaries(uploadDroneRawImagesBoundariesTLImageId, uploadDroneRawImagesBoundariesDroneRunProjectId, rotate_stitched_image_degrees, 'upload_drone_imagery_raw_images_boundary_tl_show');

        uploadDroneRawImagesBoundariesRotateAngle = rotate_stitched_image_degrees;
    });

    function applyShowRotateImageRawImageBoundaries(rotate_stitched_image_id, rotate_drone_run_band_project_id, rotate_stitched_image_degrees, canvas_div_id) {
        jQuery.ajax({
            url : '/api/drone_imagery/rotate_image?image_id='+rotate_stitched_image_id+'&drone_run_band_project_id='+rotate_drone_run_band_project_id+'&angle='+rotate_stitched_image_degrees+'&view_only=1',
            success: function(response){
                console.log(response);

                uploadDroneRawImagesBoundariesCanvas = document.getElementById(canvas_div_id);
                uploadDroneRawImagesBoundariesCtx = uploadDroneRawImagesBoundariesCanvas.getContext('2d');
                var image = new Image();
                image.onload = function () {
                    uploadDroneRawImagesBoundariesCanvas.width = this.naturalWidth;
                    uploadDroneRawImagesBoundariesCanvas.height = this.naturalHeight;
                    uploadDroneRawImagesBoundariesCtx.drawImage(this, 0, 0);
                };
                image.src = response.rotated_image_url;
            },
            error: function(response){
                alert('Error getting rotated image!')
            }
        });
    }

    jQuery('#drone_image_upload_raw_image_boundaries_start_continue').click(function(){
        uploadDroneRawImagesBoundariesCanvas = document.getElementById('upload_drone_imagery_raw_images_boundary_tl_show');
        uploadDroneRawImagesBoundariesCtx = uploadDroneRawImagesBoundariesCanvas.getContext('2d');
        uploadDroneRawImagesBoundariesCorner = 'north_west';

        Workflow.complete("#drone_image_upload_raw_image_boundaries_start_continue");
        Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 1);
        return false;
    });

    jQuery('#drone_image_upload_raw_image_boundaries_tl_continue').click(function(){
        uploadDroneRawImagesBoundariesCanvas = document.getElementById('upload_drone_imagery_raw_images_boundary_tr_show');
        uploadDroneRawImagesBoundariesCtx = uploadDroneRawImagesBoundariesCanvas.getContext('2d');
        uploadDroneRawImagesBoundariesCorner = 'north_east';

        applyShowRotateImageRawImageBoundaries(uploadDroneRawImagesBoundariesTRImageId, uploadDroneRawImagesBoundariesDroneRunProjectId, uploadDroneRawImagesBoundariesRotateAngle, 'upload_drone_imagery_raw_images_boundary_tr_show');

        Workflow.complete("#drone_image_upload_raw_image_boundaries_tl_continue");
        Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 2);
        return false;
    });

    jQuery('#drone_image_upload_raw_image_boundaries_tr_continue').click(function(){
        uploadDroneRawImagesBoundariesCanvas = document.getElementById('upload_drone_imagery_raw_images_boundary_bl_show');
        uploadDroneRawImagesBoundariesCtx = uploadDroneRawImagesBoundariesCanvas.getContext('2d');
        uploadDroneRawImagesBoundariesCorner = 'south_west';

        applyShowRotateImageRawImageBoundaries(uploadDroneRawImagesBoundariesBLImageId, uploadDroneRawImagesBoundariesDroneRunProjectId, uploadDroneRawImagesBoundariesRotateAngle, 'upload_drone_imagery_raw_images_boundary_bl_show');

        Workflow.complete("#drone_image_upload_raw_image_boundaries_tr_continue");
        Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 3);
        return false;
    });

    jQuery('#drone_image_upload_raw_image_boundaries_bl_continue').click(function(){
        uploadDroneRawImagesBoundariesCanvas = document.getElementById('upload_drone_imagery_raw_images_boundary_br_show');
        uploadDroneRawImagesBoundariesCtx = uploadDroneRawImagesBoundariesCanvas.getContext('2d');
        uploadDroneRawImagesBoundariesCorner = 'south_east';

        applyShowRotateImageRawImageBoundaries(uploadDroneRawImagesBoundariesBRImageId, uploadDroneRawImagesBoundariesDroneRunProjectId, uploadDroneRawImagesBoundariesRotateAngle, 'upload_drone_imagery_raw_images_boundary_br_show');

        Workflow.complete("#drone_image_upload_raw_image_boundaries_bl_continue");
        Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 4);
        return false;
    });

    jQuery('#drone_image_upload_raw_image_boundaries_br_continue').click(function(){
        Workflow.complete("#drone_image_upload_raw_image_boundaries_br_continue");
        Workflow.focus('#drone_imagery_upload_raw_immage_boundaries_workflow', 5);
        return false;
    });

    jQuery('#drone_image_upload_raw_image_boundaries_layout_continue').click(function(){
        uploadDroneRawImagesBoundariesFirstPlotCorner = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_first_plot_start').val();
        uploadDroneRawImagesBoundariesSecondPlotDirection = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_second_plot_follows').val();
        uploadDroneRawImagesBoundariesPlotOrientation = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_orientation').val();
        uploadDroneRawImagesBoundariesNumRows = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_row_num').val();
        uploadDroneRawImagesBoundariesNumCols = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_col_num').val();
        // uploadDroneRawImagesBoundariesFlightDir = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_flight_direction').val();
        uploadDroneRawImagesBoundariesPlotWidth = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_width').val();
        uploadDroneRawImagesBoundariesPlotLength = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_plot_length').val();
        uploadDroneRawImagesBoundariesLatitudePrecision = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_latitude').val();
        uploadDroneRawImagesBoundariesStartDirection = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_start_direction').val();
        uploadDroneRawImagesBoundariesTurnDirection = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_turn_direction').val();
        uploadDroneRawImagesBoundariesGeographicPosition = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygon_geographic_position').val();
        uploadDroneRawImagesBoundariesImageTopDirection = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_image_top_direction').val();
        uploadDroneRawImagesBoundariesRowAlleyWidth = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_row_width').val();
        uploadDroneRawImagesBoundariesColumnAlleyWidth = jQuery('#drone_imagery_upload_raw_image_boundaries_plot_polygons_alley_column_width').val();

        if (uploadDroneRawImagesBoundariesFirstPlotCorner == '' || uploadDroneRawImagesBoundariesSecondPlotDirection == '' || uploadDroneRawImagesBoundariesPlotOrientation == '') {
            alert('Please select the first plot corner, the direction of the second plot, and the plot layout orientation.');
            return false;
        }
        else if (!('north_west' in uploadDroneRawImagesBoundariesPoints) ) {
            alert('Please click the top left corner first!');
            return false;
        }
        else if (!('north_east' in uploadDroneRawImagesBoundariesPoints) ) {
            alert('Please click the top right corner first!');
            return false;
        }
        else if (!('south_west' in uploadDroneRawImagesBoundariesPoints) ) {
            alert('Please click the bottom left corner first!');
            return false;
        }
        else if (!('south_east' in uploadDroneRawImagesBoundariesPoints) ) {
            alert('Please click the bottom right corner first!');
            return false;
        }
        else if (uploadDroneRawImagesBoundariesNumRows == '') {
            alert('Please give the number of rows!');
            return false;
        }
        else if (uploadDroneRawImagesBoundariesNumCols == '') {
            alert('Please give the number of columns!');
            return false;
        }
        else if (uploadDroneRawImagesBoundariesPlotWidth == '') {
            alert('Please give a plot width in meters');
            return false;
        }
        else if (uploadDroneRawImagesBoundariesPlotLength == '') {
            alert('Please give a plot length in meters');
            return false;
        }
        else {
            drone_run_band_unstitched_raw_image_boundaries = 0;
            jQuery('#drone_run_raw_image_boundaries_first_plot_corner').val(uploadDroneRawImagesBoundariesFirstPlotCorner);
            jQuery('#drone_run_raw_image_boundaries_second_plot_direction').val(uploadDroneRawImagesBoundariesSecondPlotDirection);
            jQuery('#drone_run_raw_image_boundaries_plot_orientation').val(uploadDroneRawImagesBoundariesPlotOrientation);
            jQuery('#drone_run_raw_image_boundaries_corners_json').val(JSON.stringify(uploadDroneRawImagesBoundariesPoints));
            jQuery('#drone_run_raw_image_boundaries_corners_gps_json').val(JSON.stringify(uploadDroneRawImagesBoundariesCornersGPS));
            jQuery('#drone_run_raw_image_boundaries_corners_plots_json').val(JSON.stringify(uploadDroneRawImagesBoundariesPlotClickCorners));
            jQuery('#drone_run_raw_image_boundaries_rotate_angle').val(uploadDroneRawImagesBoundariesRotateAngle);
            jQuery('#drone_run_raw_image_boundaries_row_num').val(uploadDroneRawImagesBoundariesNumRows);
            jQuery('#drone_run_raw_image_boundaries_col_num').val(uploadDroneRawImagesBoundariesNumCols);
            // jQuery('#drone_run_raw_image_boundaries_flight_direction').val(uploadDroneRawImagesBoundariesFlightDir);
            jQuery('#drone_run_raw_image_boundaries_plot_width').val(uploadDroneRawImagesBoundariesPlotWidth);
            jQuery('#drone_run_raw_image_boundaries_plot_length').val(uploadDroneRawImagesBoundariesPlotLength);
            jQuery('#drone_run_raw_image_boundaries_latitude_precision').val(uploadDroneRawImagesBoundariesLatitudePrecision);
            jQuery('#drone_run_raw_image_boundaries_start_direction').val(uploadDroneRawImagesBoundariesStartDirection);
            jQuery('#drone_run_raw_image_boundaries_turn_direction').val(uploadDroneRawImagesBoundariesTurnDirection);
            jQuery('#drone_run_raw_image_boundaries_geographic_position').val(uploadDroneRawImagesBoundariesGeographicPosition);
            jQuery('#drone_run_raw_image_boundaries_image_top_direction').val(uploadDroneRawImagesBoundariesImageTopDirection);
            jQuery('#drone_run_raw_image_boundaries_row_alley_width').val(uploadDroneRawImagesBoundariesRowAlleyWidth);
            jQuery('#drone_run_raw_image_boundaries_column_alley_width').val(uploadDroneRawImagesBoundariesColumnAlleyWidth);

            jQuery('#upload_drone_imagery_dialog').modal('show');
        }

    });

});

function uploadDroneImageryRawImageBoundaryShow() {
    drone_run_band_unstitched_raw_image_boundaries = 1;
    if (jQuery('#upload_drone_images_top_left_image').val() == ''){
        alert('Please select a top left image');
        return;
    }
    if (jQuery('#upload_drone_images_top_right_image').val() == ''){
        alert('Please select a top right image');
        return;
    }
    if (jQuery('#upload_drone_images_bottom_left_image').val() == ''){
        alert('Please select a bottom left image');
        return;
    }
    if (jQuery('#upload_drone_images_bottom_right_image').val() == ''){
        alert('Please select a bottom right image');
        return;
    }
    jQuery('#upload_drone_imagery_submit').click();
}

</script>
